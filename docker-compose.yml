# version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: audio_hosting_db
    environment:
      POSTGRES_DB: audiohosting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - audio_hosting_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: audio_hosting_backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: audiohosting
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      SESSION_SECRET: your-super-secret-session-key-change-in-production
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - audio_uploads:/app/uploads
    depends_on:
      - postgres
    networks:
      - audio_hosting_network
    restart: unless-stopped

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: audio_hosting_frontend_antd
  #   environment:
  #     REACT_APP_API_URL: http://localhost:5000/api
  #   ports:
  #     - "3000:80"
  #   volumes:
  #     - ./frontend/src:/app/src:ro
  #   depends_on:
  #     - backend
  #   networks:
  #     - audio_hosting_network
  #   restart: unless-stopped

  # frontend:
  #   image: node:18-alpine
  #   container_name: audio_hosting_frontend
  #   working_dir: /app
  #   command: sh -c "npm install && npm start"
  #   environment:
  #     REACT_APP_API_URL: http://localhost:5000/api
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend
  #   networks:
  #     - audio_hosting_network

volumes:
  postgres_data:
  audio_uploads:

networks:
  audio_hosting_network:
    driver: bridge